[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "task-backend"
version = "0.1.0"
description = "A FastAPI task management backend"
authors = [
    {name = "Tu Nombre", email = "tuemail@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers"
]

# Dependencias principales
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.13.0",
    "passlib[bcrypt]>=1.7.0",
    "python-jose[cryptography]>=3.3.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.20",
    "itsdangerous>=2.2.0",
]

# Dependencias opcionales (dev)
[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-env>=1.1.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.27.0",
    "asgi-lifespan>=2.0.0",

    # Database (async)
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.0",

    # Dev Tools
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.0.0",
    "types-requests",
    "types-urllib3",
    "pytest-cov>=5.0.0",
]

# Configuración de setuptools
[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

# Configuración de pytest
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["app/tests"]
python_files = ["test_*.py", "tests.py"]
addopts = "-v -s --tb=short"

# Configuración de mypy
[tool.mypy]
strict = true
python_version = "3.13"
exclude = [
    "venv",
    "migrations",
    "tests/test_.*\\.py"
]
warn_return_any = true
warn_unused_configs = true
show_error_codes = true

# Configuración de coverage (pytest-cov)
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

# Configuración de black
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
skip-string-normalization = true

# Configuración de isort
[tool.isort]
profile = "black"
line_length = 88
skip = ["venv", "__pycache__"]

# Configuración de flake8
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]